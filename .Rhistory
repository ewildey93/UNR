dH <- read.csv("./CamData22DetectionHistory.csv")
View(dH)
View(camOps)
#make detection history by Date
species <- unique(Cam4$species)
View(Cam4)
dH <- data.frame(Date=seq.Date(from=StationInfo$min, to=StationInfo$max, by=1))
#watch out for wrong dates (e.g. 01-01-2018)
for (i in 1:length(species)){
x <- sapply(dH$Date, function (x) ifelse(x %in% Cam4[Cam4$species == species[i],]$Date, 1,0))
y <- sapply(dH$Date, function (x) ifelse(x %in% Cam4[Cam4$species == species[i],]$Date, paste(Cam4$Spring, Cam4$Line),NA))
dH[ ,ncol(dH)+1] <- x                # Append new column
colnames(dH)[ncol(dH)] <- species[i] # Rename column name
dH[ ,ncol(dH)+1] <- y
colnames(dH)[ncol(dH)] <- colnames(dH)[ncol(dH)] <- paste(species[i], "SpringLine")
}
View(dH)
#watch out for wrong dates (e.g. 01-01-2018)
cameras <- unique(Cam4$CamID)
cameras
dH <- data.frame(Date=seq.Date(from=StationInfo$min, to=StationInfo$max, by=1))
for(cam in 1:length(cameras)){
CamSub <- Cam4[Cam4$CamID == cameras[cam],]
for (i in 1:length(species)){
x <- sapply(dH$Date, function (x) ifelse(x %in% Cam4[Cam4$species == species[i],]$Date, 1,0))
y <- sapply(dH$Date, function (x) ifelse(x %in% Cam4[Cam4$species == species[i],]$Date, paste(Cam4$Spring, Cam4$Line),NA))
dH[ ,ncol(dH)+1] <- x                # Append new column
colnames(dH)[ncol(dH)] <- species[i] # Rename column name
dH[ ,ncol(dH)+1] <- y
colnames(dH)[ncol(dH)] <- colnames(dH)[ncol(dH)] <- paste(species[i], "SpringLine")
}
}
View(dH)
for(cam in 1:length(cameras)){
CamSub <- Cam4[Cam4$CamID == cameras[cam],]
for (i in 1:length(species)){
x <- sapply(dH$Date, function (x) ifelse(x %in% CamSub[CamSub$species == species[i],]$Date, 1,0))
y <- sapply(dH$Date, function (x) ifelse(x %in% CamSub[CamSub$species == species[i],]$Date, paste(CamSub$Spring, CamSub$Line),NA))
dH[ ,ncol(dH)+1] <- x                # Append new column
colnames(dH)[ncol(dH)] <- species[i] # Rename column name
dH[ ,ncol(dH)+1] <- y
colnames(dH)[ncol(dH)] <- colnames(dH)[ncol(dH)] <- paste(species[i], "SpringLine")
}
}
dH <- data.frame(Date=seq.Date(from=StationInfo$min, to=StationInfo$max, by=1))
#watch out for wrong dates (e.g. 01-01-2018)
cameras <- unique(Cam4$CamID)
for(cam in 1:length(cameras)){
CamSub <- Cam4[Cam4$CamID == cameras[cam],]
for (i in 1:length(species)){
x <- sapply(dH$Date, function (x) ifelse(x %in% CamSub[CamSub$species == species[i],]$Date, 1,0))
y <- sapply(dH$Date, function (x) ifelse(x %in% CamSub[CamSub$species == species[i],]$Date, paste(CamSub$Spring, CamSub$Line),NA))
dH[ ,ncol(dH)+1] <- x                # Append new column
colnames(dH)[ncol(dH)] <- species[i] # Rename column name
dH[ ,ncol(dH)+1] <- y
colnames(dH)[ncol(dH)] <- colnames(dH)[ncol(dH)] <- paste(species[i], "SpringLine")
}
}
View(dH)
dH <- data.frame(Date=seq.Date(from=StationInfo$min, to=StationInfo$max, by=1))
for (i in 1:length(species)){
x <- sapply(dH$Date, function (x) ifelse(x %in% CamSub[CamSub$species == species[i],]$Date, 1,0))
y <- sapply(dH$Date, function (x) ifelse(x %in% CamSub[CamSub$species == species[i],]$Date, paste(CamSub$Spring, CamSub$Line),NA))
dH[ ,ncol(dH)+1] <- x                # Append new column
colnames(dH)[ncol(dH)] <- species[i] # Rename column name
dH[ ,ncol(dH)+1] <- y
colnames(dH)[ncol(dH)] <- colnames(dH)[ncol(dH)] <- paste(species[i], "SpringLine")
}
View(dH)
dH <- data.frame(Date=seq.Date(from=StationInfo$min, to=StationInfo$max, by=1))
for (i in 1:length(species)){
x <- sapply(dH$Date, function (x) ifelse(x %in% Cam4[Cam4$species == species[i],]$Date, 1,0))
y <- sapply(dH$Date, function (x) ifelse(x %in% Cam4[Cam4$species == species[i],]$Date, paste(Cam4$Spring, Cam4$Line),NA))
dH[ ,ncol(dH)+1] <- x                # Append new column
colnames(dH)[ncol(dH)] <- species[i] # Rename column name
dH[ ,ncol(dH)+1] <- y
colnames(dH)[ncol(dH)] <- colnames(dH)[ncol(dH)] <- paste(species[i], "SpringLine")
}
View(dH)
Cam4[Cam4$species == species[1],]
length(Cam4)
dH <- data.frame(Date=seq.Date(from=StationInfo$min, to=StationInfo$max, by=1))
for (i in 1:length(species)){
CamSub <- Cam4[Cam4$species == species[i],]
x <- sapply(dH$Date, function (x) ifelse(x %in% CamSub$Date, length(CamSub$Date),0))
y <- sapply(dH$Date, function (x) ifelse(x %in% CamSub$Date, paste(CamSub$Spring, CamSub$Line)))
dH[ ,ncol(dH)+1] <- x                # Append new column
colnames(dH)[ncol(dH)] <- species[i] # Rename column name
dH[ ,ncol(dH)+1] <- y
colnames(dH)[ncol(dH)] <- colnames(dH)[ncol(dH)] <- paste(species[i], "SpringLine")
}
for (i in 1:length(species)){
CamSub <- Cam4[Cam4$species == species[i],]
x <- sapply(dH$Date, function (x) ifelse(x %in% CamSub$Date, length(CamSub$Date),0))
y <- sapply(dH$Date, function (x) ifelse(x %in% CamSub$Date, paste(CamSub$Spring, CamSub$Line),NA))
dH[ ,ncol(dH)+1] <- x                # Append new column
colnames(dH)[ncol(dH)] <- species[i] # Rename column name
dH[ ,ncol(dH)+1] <- y
colnames(dH)[ncol(dH)] <- colnames(dH)[ncol(dH)] <- paste(species[i], "SpringLine")
}
View(dH)
?ifelse
dH <- data.frame(Date=seq.Date(from=StationInfo$min, to=StationInfo$max, by=1))
for (i in 1:length(species)){
CamSub <- Cam4[Cam4$species == species[i],]
x <- sapply(dH$Date, function (x) ifelse(x %in% CamSub$Date, length(CamSub$Date[CamSub$Date == x]),0))
y <- sapply(dH$Date, function (x) ifelse(x %in% CamSub$Date, paste(CamSub$Spring, CamSub$Line),NA))
dH[ ,ncol(dH)+1] <- x                # Append new column
colnames(dH)[ncol(dH)] <- species[i] # Rename column name
dH[ ,ncol(dH)+1] <- y
colnames(dH)[ncol(dH)] <- colnames(dH)[ncol(dH)] <- paste(species[i], "SpringLine")
}
View(dH)
Cam4[Cam4$species == "Coyote",]
dH <- data.frame(Date=seq.Date(from=StationInfo$min, to=StationInfo$max, by=1))
for (i in 1:length(species)){
CamSub <- Cam4[Cam4$species == species[i],]
x <- sapply(dH$Date, function (x) ifelse(x %in% CamSub$Date, length(CamSub$Date[CamSub$Date == x]),0))
y <- sapply(dH$Date, function (x) ifelse(x %in% CamSub$Date, paste0(CamSub[CamSub$Date == x]$Spring, CamSub[CamSub$Date == x]$Line),NA))
dH[ ,ncol(dH)+1] <- x                # Append new column
colnames(dH)[ncol(dH)] <- species[i] # Rename column name
dH[ ,ncol(dH)+1] <- y
colnames(dH)[ncol(dH)] <- colnames(dH)[ncol(dH)] <- paste(species[i], "SpringLine")
}
for (i in 1:length(species)){
CamSub <- Cam4[Cam4$species == species[i],]
x <- sapply(dH$Date, function (x) ifelse(x %in% CamSub$Date, length(CamSub$Date[CamSub$Date == x]),0))
y <- sapply(dH$Date, function (x) ifelse(x %in% CamSub$Date, paste0(CamSub[CamSub$Date == x,]$Spring, CamSub[CamSub$Date == x,]$Line),NA))
dH[ ,ncol(dH)+1] <- x                # Append new column
colnames(dH)[ncol(dH)] <- species[i] # Rename column name
dH[ ,ncol(dH)+1] <- y
colnames(dH)[ncol(dH)] <- colnames(dH)[ncol(dH)] <- paste(species[i], "SpringLine")
}
View(dH)
dH <- data.frame(Date=seq.Date(from=StationInfo$min, to=StationInfo$max, by=1))
for (i in 1:length(species)){
CamSub <- Cam4[Cam4$species == species[i],]
x <- sapply(dH$Date, function (x) ifelse(x %in% CamSub$Date, length(CamSub$Date[CamSub$Date == x]),0))
y <- sapply(dH$Date, function (x) ifelse(x %in% CamSub$Date, paste(CamSub[CamSub$Date == x,]$Spring, CamSub[CamSub$Date == x,]$Line),NA))
dH[ ,ncol(dH)+1] <- x                # Append new column
colnames(dH)[ncol(dH)] <- species[i] # Rename column name
dH[ ,ncol(dH)+1] <- y
colnames(dH)[ncol(dH)] <- colnames(dH)[ncol(dH)] <- paste(species[i], "SpringLine")
}
View(dH)
?paste
View(CamSub)
CamSub <- Cam4[Cam4$species == species[1],]
paste(CamSub[CamSub$Date == dH$Date[1],]$Spring, CamSub[CamSub$Date == dH$Date[1],]$Line)
CamSub$Date == dH$Date[1],]$Spring
CamSub[CamSub$Date == dH$Date[1],]$Spring
CamSub[CamSub$Date == dH$Date[34],]$Spring
table(CamSub$Spring)
CamSub[CamSub$Date == dH$Date[34],]
z <- CamSub[CamSub$Date == dH$Date[34],]
View(z)
table(is.na(Cam4$Date))
#separate detection dates into individual rows for each detection
Cam4 <- separate_rows(Cam3, Detection.Dates, sep=",")
Cam4 <- Cam4%>% mutate(Taxa=case_when(species %in% mammals  ~ "Mammals",
species %in% birds ~ "Birds",
species == "unID.Herp" ~ "Herps"
))
#clean up date column for key
Cam4$Date <- as.Date(Cam4$Detection.Dates, format= "%m/%d/%y")
table(is.na(Cam4$Date))
which(is.na(Cam4$Date))
View(Cam3)
#bring in camera data transcribed from word doc
Cam <- read.csv("C:/Users/eliwi/OneDrive/Documents/UNR/CamData22.csv", na.strings = c("", "N/A"))
Cam$First.Photo.Date <- as.Date(Cam$First.Photo.Date, format = "%m/%d/%y")
Cam$What.is.date.of.last.photo. <- as.Date(Cam$What.is.date.of.last.photo., format = "%m/%d/%y")
#make rows for detection dates of each species
Cam2 <- Cam%>%pivot_longer(cols = 14:38,
names_to = "species",
values_to = "Detection.Dates")
#remove dates where nothing was detected
Cam3 <- Cam2[!is.na(Cam2$Detection.Dates),]
#separate detection dates into individual rows for each detection
Cam4 <- separate_rows(Cam3, Detection.Dates, sep=",")
Cam4 <- Cam4%>% mutate(Taxa=case_when(species %in% mammals  ~ "Mammals",
species %in% birds ~ "Birds",
species == "unID.Herp" ~ "Herps"
))
#clean up date column for key
Cam4$Date <- as.Date(Cam4$Detection.Dates, format= "%m/%d/%y")
which(is.na(Cam4$Date))
table(is.na(Cam4$Date))
Cam3[227,16]
Cam4[which(is.na(Cam4$Date)),]
a <- Cam4[which(is.na(Cam4$Date)),]
View(a)
#bring in camera data transcribed from word doc
Cam <- read.csv("C:/Users/eliwi/OneDrive/Documents/UNR/CamData22.csv", na.strings = c("", "N/A"))
Cam$First.Photo.Date <- as.Date(Cam$First.Photo.Date, format = "%m/%d/%y")
Cam$What.is.date.of.last.photo. <- as.Date(Cam$What.is.date.of.last.photo., format = "%m/%d/%y")
#make rows for detection dates of each species
Cam2 <- Cam%>%pivot_longer(cols = 14:38,
names_to = "species",
values_to = "Detection.Dates")
#remove dates where nothing was detected
Cam3 <- Cam2[!is.na(Cam2$Detection.Dates),]
#separate detection dates into individual rows for each detection
Cam4 <- separate_rows(Cam3, Detection.Dates, sep=",")
Cam4 <- Cam4%>% mutate(Taxa=case_when(species %in% mammals  ~ "Mammals",
species %in% birds ~ "Birds",
species == "unID.Herp" ~ "Herps"
))
#clean up date column for key
Cam4$Date <- as.Date(Cam4$Detection.Dates, format= "%m/%d/%y")
a <- Cam4[which(is.na(Cam4$Date)),]
Cam4[which(is.na(Cam4$Date)),]
table(is.na(Cam4$Date))
dH <- data.frame(Date=seq.Date(from=StationInfo$min, to=StationInfo$max, by=1))
for (i in 1:length(species)){
CamSub <- Cam4[Cam4$species == species[i],]
x <- sapply(dH$Date, function (x) ifelse(x %in% CamSub$Date, length(CamSub$Date[CamSub$Date == x]),0))
y <- sapply(dH$Date, function (Date) ifelse(Date %in% CamSub$Date, CamSub$CamID[CamSub$Date == x],NA))
dH[ ,ncol(dH)+1] <- x                # Append new column
colnames(dH)[ncol(dH)] <- species[i] # Rename column name
dH[ ,ncol(dH)+1] <- y
colnames(dH)[ncol(dH)] <- colnames(dH)[ncol(dH)] <- paste(species[i], "SpringLine")
}
warnings()
dH <- data.frame(Date=seq.Date(from=StationInfo$min, to=StationInfo$max, by=1))
for (i in 1:length(species)){
CamSub <- Cam4[Cam4$species == species[i],]
x <- sapply(dH$Date, function (x) ifelse(x %in% CamSub$Date, length(CamSub$Date[CamSub$Date == x]),0))
y <- sapply(dH$Date, function (x) ifelse(x %in% CamSub$Date, CamSub$CamID[CamSub$Date == x],NA))
dH[ ,ncol(dH)+1] <- x                # Append new column
colnames(dH)[ncol(dH)] <- species[i] # Rename column name
dH[ ,ncol(dH)+1] <- y
colnames(dH)[ncol(dH)] <- colnames(dH)[ncol(dH)] <- paste(species[i], "SpringLine")
}
View(dH)
View(CamSub)
CamSub <- Cam4[Cam4$species == species[1],]
View(CamSub)
CamSub[CamSub$Date == dH$Date[69],]$Spring
CamSub[CamSub$Date == dH$Date[69],]$Line
dH <- data.frame(Date=seq.Date(from=StationInfo$min, to=StationInfo$max, by=1))
for (i in 1:length(species)){
CamSub <- Cam4[Cam4$species == species[i],]
x <- sapply(dH$Date, function (x) ifelse(x %in% CamSub$Date, length(CamSub$Date[CamSub$Date == x]),0))
y <- sapply(dH$Date, function (Date) ifelse(Date %in% CamSub$Date, paste(CamSub[CamSub$Date == x,]$Spring, CamSub[CamSub$Date == x,]$Line),NA))
dH[ ,ncol(dH)+1] <- x                # Append new column
colnames(dH)[ncol(dH)] <- species[i] # Rename column name
dH[ ,ncol(dH)+1] <- y
colnames(dH)[ncol(dH)] <- colnames(dH)[ncol(dH)] <- paste(species[i], "SpringLine")
}
dH <- data.frame(Date=seq.Date(from=StationInfo$min, to=StationInfo$max, by=1))
for (i in 1:length(species)){
CamSub <- Cam4[Cam4$species == species[i],]
x <- sapply(dH$Date, function (x) ifelse(x %in% CamSub$Date, length(CamSub$Date[CamSub$Date == x]),0))
y <- sapply(dH$Date, function (Date) ifelse(Date %in% CamSub$Date, paste(CamSub[CamSub$Date == Date,]$Spring, CamSub[CamSub$Date == Date,]$Line),NA))
dH[ ,ncol(dH)+1] <- x                # Append new column
colnames(dH)[ncol(dH)] <- species[i] # Rename column name
dH[ ,ncol(dH)+1] <- y
colnames(dH)[ncol(dH)] <- colnames(dH)[ncol(dH)] <- paste(species[i], "SpringLine")
}
View(dH)
paste(CamSub[CamSub$Date == dH$Date[69],]$Spring, CamSub[CamSub$Date == dH$Date[69],]$Line)
CamSub <- Cam4[Cam4$species == species[1],]
paste(CamSub[CamSub$Date == dH$Date[69],]$Spring, CamSub[CamSub$Date == dH$Date[69],]$Line)
as.vector("MH Upland"  "MH Upland"  "DVS UIF"    "BBS Upland")
paste(CamSub[CamSub$Date == dH$Date[69],]$Spring, CamSub[CamSub$Date == dH$Date[69],]$Line, sep=",")
as.character(paste(CamSub[CamSub$Date == dH$Date[69],]$Spring, CamSub[CamSub$Date == dH$Date[69],]$Line, sep=","))
as.character(paste(CamSub[CamSub$Date == dH$Date[69],]$Spring, CamSub[CamSub$Date == dH$Date[69],]$Line))
aa <- paste(CamSub[CamSub$Date == dH$Date[69],]$Spring, CamSub[CamSub$Date == dH$Date[69],]$Line)
class(aa)
paste(paste(CamSub[CamSub$Date == dH$Date[69],]$Spring, CamSub[CamSub$Date == dH$Date[69],]$Line), collapse=",")
paste(paste(CamSub[CamSub$Date == dH$Date[69],]$Spring, CamSub[CamSub$Date == dH$Date[69],]$Line), collapse=" ,")
paste(paste(CamSub[CamSub$Date == dH$Date[69],]$Spring, CamSub[CamSub$Date == dH$Date[69],]$Line), collapse=", ")
dH <- data.frame(Date=seq.Date(from=StationInfo$min, to=StationInfo$max, by=1))
for (i in 1:length(species)){
CamSub <- Cam4[Cam4$species == species[i],]
x <- sapply(dH$Date, function (x) ifelse(x %in% CamSub$Date, length(CamSub$Date[CamSub$Date == x]),0))
y <- sapply(dH$Date, function (Date) ifelse(Date %in% CamSub$Date, paste(paste(CamSub[CamSub$Date == Date,]$Spring, CamSub[CamSub$Date == Date,]$Line), collapse=", "),NA))
dH[ ,ncol(dH)+1] <- x                # Append new column
colnames(dH)[ncol(dH)] <- species[i] # Rename column name
dH[ ,ncol(dH)+1] <- y
colnames(dH)[ncol(dH)] <- colnames(dH)[ncol(dH)] <- paste(species[i], "SpringLine")
}
View(dH)
# setup and retrieval days default to 0.5 day effort from cameraOperation function
dH$TrapEffort <- sapply(dH$Date, function (x) sum(camOps[,as.character(x)], na.rm = T))
write.csv(dH, "./CamData22DetectionHistory.csv")
View(Cam4)
View(StationInfo)
View(StationInfo2)
View(StationInfo4)
View(Springs)
#camOps effort by Spring
Springs <- unique(Cam4$Spring)
colnames(camOps)
CamOpList <- list()
?append
Springs
CamOpList <- list()
for(i in 1:length(Springs)){
camOp <- cameraOperation(CTtable = StationInfo4[StationInfo4$Spring == Springs[i]],
stationCol = 'CamID',
setupCol = 'min',
retrievalCol = 'max'
)
CamOpList <- append(CamOpList, camOp)
}
for(i in 1:length(Springs)){
camOp <- cameraOperation(CTtable = StationInfo4[StationInfo4$Spring == Springs[i],],
stationCol = 'CamID',
setupCol = 'min',
retrievalCol = 'max'
)
CamOpList <- append(CamOpList, camOp)
}
View(CamOpList)
CamOpList <- list()
for(i in 1:length(Springs)){
camOp <- cameraOperation(CTtable = StationInfo4[StationInfo4$Spring == Springs[i],],
stationCol = 'CamID',
setupCol = 'min',
retrievalCol = 'max'
)
camOp <- as.data.frame(camO)
CamOpList <- append(CamOpList, camOp)
}
CamOpList <- list()
for(i in 1:length(Springs)){
camOp <- cameraOperation(CTtable = StationInfo4[StationInfo4$Spring == Springs[i],],
stationCol = 'CamID',
setupCol = 'min',
retrievalCol = 'max'
)
CamOpList <- append(CamOpList, camOp)
}
View(CamOpList)
CamOpList <- list()
for(i in 1:length(Springs)){
camOp <- cameraOperation(CTtable = StationInfo4[StationInfo4$Spring == Springs[i],],
stationCol = 'CamID',
setupCol = 'min',
retrievalCol = 'max'
)
camOp <- as.data.frame(camOp)
CamOpList <- append(CamOpList, camOp)
}
View(CamOpList)
as.data.frame(camOps)
k <- as.data.frame(CamOps)
k <- as.data.frame(camOps)
View(k)
?append
CamOpList <- list()
for(i in 1:length(Springs)){
camOp <- cameraOperation(CTtable = StationInfo4[StationInfo4$Spring == Springs[i],],
stationCol = 'CamID',
setupCol = 'min',
retrievalCol = 'max'
)
CamOpList <- append.list(CamOpList, camOp)
}
CamOpList <- list()
for(i in 1:length(Springs)){
camOp <- cameraOperation(CTtable = StationInfo4[StationInfo4$Spring == Springs[i],],
stationCol = 'CamID',
setupCol = 'min',
retrievalCol = 'max'
)
CamOpList <- append(camOp,CamOpList)
}
names(CamOpList) <- Springs
CamOpList <- list()
View(CamOpList)
?list
CamOpList <- list()
for(i in 1:length(Springs)){
camOp <- cameraOperation(CTtable = StationInfo4[StationInfo4$Spring == Springs[i],],
stationCol = 'CamID',
setupCol = 'min',
retrievalCol = 'max'
)
CamOpList[[Springs[i]]] <- append(camOp)
}
for(i in 1:length(Springs)){
camOp <- cameraOperation(CTtable = StationInfo4[StationInfo4$Spring == Springs[i],],
stationCol = 'CamID',
setupCol = 'min',
retrievalCol = 'max'
)
CamOpList[[Springs[i]]] <- camOp
}
View(CamOpList)
View(CamOpList)
CamOpList[["BBS/UC"]]
View(Cam4)
View(Cam4)
View(Cam)
#bring in camera data transcribed from word doc
Cam <- read.csv("C:/Users/eliwi/OneDrive/Documents/UNR/CamData22.csv", na.strings = c("", "N/A"))
View(Cam)
View(Cam4)
Cam$First.Photo.Date <- as.Date(Cam$First.Photo.Date, format = "%m/%d/%y")
Cam$What.is.date.of.last.photo. <- as.Date(Cam$What.is.date.of.last.photo., format = "%m/%d/%y")
#bring in camera data transcribed from word doc
Cam <- read.csv("C:/Users/eliwi/OneDrive/Documents/UNR/CamData22.csv", na.strings = c("", "N/A"))
Cam$First.Photo.Date <- as.Date(Cam$First.Photo.Date, format = "%m/%d/%Y")
Cam$What.is.date.of.last.photo. <- as.Date(Cam$What.is.date.of.last.photo., format = "%m/%d/%Y")
#make rows for detection dates of each species
Cam2 <- Cam%>%pivot_longer(cols = 14:38,
names_to = "species",
values_to = "Detection.Dates")
#remove dates where nothing was detected
Cam3 <- Cam2[!is.na(Cam2$Detection.Dates),]
#separate detection dates into individual rows for each detection
Cam4 <- separate_rows(Cam3, Detection.Dates, sep=",")
Cam4 <- Cam4%>% mutate(Taxa=case_when(species %in% mammals  ~ "Mammals",
species %in% birds ~ "Birds",
species == "unID.Herp" ~ "Herps"
))
#clean up date column for key
Cam4$Date <- as.Date(Cam4$Detection.Dates, format= "%m/%d/%y")
#CI Station Info similar to data(camtraps), input for summaries in CamTrapR
#get camera station info for trap effort
StationInfo <- Cam[Cam$First.Photo.Date > "2022-01-01" & Cam$What.is.date.of.last.photo. > "2022-01-01",] %>% summarise(min=min(First.Photo.Date),max=max(What.is.date.of.last.photo.))
StationInfo2 <- Cam[Cam$First.Photo.Date > "2022-01-01" & Cam$What.is.date.of.last.photo. > "2022-01-01",] %>% group_by(CamID) %>% summarise(min=min(First.Photo.Date),max=max(What.is.date.of.last.photo.))
StationInfo3 <- distinct(Cam4[,c(1,2,4,6)], CamID, .keep_all = T)
StationInfo4 <- left_join(StationInfo2, StationInfo3, by='CamID')
camOps <- cameraOperation(CTtable = StationInfo4,
stationCol = 'CamID',
setupCol = 'min',
retrievalCol = 'max'
) # can include argument hasProblems=T for periods where camera was out of order
CamOpList <- list()
for(i in 1:length(Springs)){
camOp <- cameraOperation(CTtable = StationInfo4[StationInfo4$Spring == Springs[i],],
stationCol = 'CamID',
setupCol = 'min',
retrievalCol = 'max'
)
CamOpList[[Springs[i]]] <- camOp
}
View(CamOpList)
CamOpList[["BBS/UC"]]
View(StationInfo4)
View(StationInfo2)
View(StationInfo3)
View(Cam)
View(StationInfo4)
View(StationInfo2)
View(StationInfo3)
View(CamOpList)
View(Cam4)
DVS <- Cam4[Cam4$Spring == "DVS",]
View(CamOpList)
CamOpList[["DVS"]]
DVS$TrapEffort <- sapply(DVS$Date, function (x) sum(CamOpList[["DVS"]][,as.character(x)], na.rm = T))
CamOpList[["DVS"]][,"2022-08-04"]
DVS$Date
DVS$TrapEffort <- sapply(DVS$Date, function (x) sum(CamOpList[["DVS"]][,as.character(x)], na.rm = T))
DVSte <- CamOpList[["DVS"]]
DVSte <- as.data.frame(CamOpList[["DVS"]])
View(DVSte)
?colSums
DVSte <- colSums(CamOpList[["DVS"]], na.rm = T)
DVSte
DVSCumSum <- cumsum(DVSte)
DVSCumSum
DVSte <- as.data.frame(colSums(CamOpList[["DVS"]], na.rm = T))
View(DVSte)
DVSte$Date <- rownames(DVSte)
DVSte$CumSum <- cumsum(DVSte$`colSums(CamOpList[["DVS"]], na.rm = T)`)
DVS <- left_join(DVS, DVSte, by=Date)
DVS <- left_join(DVS, DVSte, by="Date")
colnames(DVSte)[1] <- "Daily Effort"
DVSte$Date <- as.Date(rownames(DVSte), format = "%Y-%m-%d")
DVSte$CumEffort <- cumsum(DVSte$`colSums(CamOpList[["DVS"]], na.rm = T)`)
DVS <- left_join(DVS, DVSte, by="Date")
View(DVS)
View(Cam4)
#bring in camera data transcribed from word doc
Cam <- read.csv("C:/Users/eliwi/OneDrive/Documents/UNR/CamData22.csv", na.strings = c("", "N/A"))
Cam$First.Photo.Date <- as.Date(Cam$First.Photo.Date, format = "%m/%d/%Y")
Cam$What.is.date.of.last.photo. <- as.Date(Cam$What.is.date.of.last.photo., format = "%m/%d/%Y")
#make rows for detection dates of each species
Cam2 <- Cam%>%pivot_longer(cols = 14:38,
names_to = "species",
values_to = "Detection.Dates")
#remove dates where nothing was detected
Cam3 <- Cam2[!is.na(Cam2$Detection.Dates),]
#separate detection dates into individual rows for each detection
Cam4 <- separate_rows(Cam3, Detection.Dates, sep=",")
Cam4 <- Cam4%>% mutate(Taxa=case_when(species %in% mammals  ~ "Mammals",
species %in% birds ~ "Birds",
species == "unID.Herp" ~ "Herps"
))
#clean up date column for key
Cam4$Date <- as.Date(Cam4$Detection.Dates, format= "%m/%d/%y")
table(is.na(Cam4$Date))
DVS <- Cam4[Cam4$Spring == "DVS",]
DVSte <- as.data.frame(colSums(CamOpList[["DVS"]], na.rm = T))
colnames(DVSte)[1] <- "Daily Effort"
DVSte$Date <- as.Date(rownames(DVSte), format = "%Y-%m-%d")
DVSte$CumEffort <- cumsum(DVSte$`colSums(CamOpList[["DVS"]], na.rm = T)`)
DVSte$CumEffort <- cumsum(DVSte$`Daily Effort`, na.rm = T)`)
colnames(DVSte)[1] <- "DailyEffort"
DVSte$Date <- as.Date(rownames(DVSte), format = "%Y-%m-%d")
DVSte$CumEffort <- cumsum(DVSte$DailyEffort, na.rm = T)
colnames(DVSte)[1] <- "DailyEffort"
DVSte$Date <- as.Date(rownames(DVSte), format = "%Y-%m-%d")
DVSte$CumSum <- cumsum(DVSte$DailyEffort)
DVS <- left_join(DVS, DVSte, by="Date")
View(DVS)
